#
#
# detect if it's brac01 or brac02 from the colour of frame and cue
if (length(unique(d$framecolor)) == 3){
B = "B1B2"
} else if (unique(d$framecolor)[1] == "black"){
B = "B1"
context = "cuecolor"
context_R = "cuecolor_R"
} else if (unique(d$cuecolor)[1] == "black"){
B = "B2"
context = "framecolor"
context_R = "framecolor_R"
}
print(B)
#
# for (p in c("GM4", "LU1", "LY8", "NE3", "NW8", "TO3", "UG7", "WI5", "XL2", "YF1", "5896f9951a06b50001a7ff12", "5b1fc3ae325d600001c03dcb", "5d5bcd6c0802ee001608c5a8", "5e4a932344498f4e361fee0d", "5ec3dd4a21dd590667039a02")){
#   d[d$pp == p, "counterbalance"] <- "horiAA_1st300"
# }
#
# d <- d[,-1]
d <- d2
# adjust class of variables
d$task_R <- as.factor(d$task_R)
d$ANSWER_R <- as.factor(d$ANSWER_R)
d[[context_R]] <- as.factor(d[[context_R]])
d$context_R <- as.factor(d$context_R)
d$Attempt <- as.factor(d$Attempt)
d$cocoa <- as.factor(d$cocoa)
d$counterbalance <- as.factor(d$counterbalance)
d$age <- as.numeric(d$age)
d$sex <- as.factor(d$sex)
d$psyKnowledge <- as.factor(d$psyKnowledge)
d$education <- as.factor(d$education)
d$handedness <- as.factor(d$handedness)
d$motherTongue <- as.factor(d$motherTongue)
d$country <- as.factor(d$country)
d$prolific <- as.factor(d$prolific)
d$map_horiAA300 <- as.factor(d$map_horiAA300)
#write.csv2(d, paste0(dataDir, "B2_43pps.csv"), row.names=FALSE)
d1 <- read.csv(paste0(dataDir, "B1_43pps", ".csv"), sep = ";", dec = ",")
d1$exp <- "BRAC1"
d1$map_horiAA300 <- 0
d1$map_horiAA300[d1$counterbalance == "horiAA_1st300"] <- 1
d2 <- read.csv(paste0(dataDir, "B2_43pps", ".csv"), sep = ";", dec = ",")
d2$map_horiAA300 <- 0
d2$map_horiAA300[d2$counterbalance == "BRAC2_horiAA_1st300"] <- 1
d2$exp <- "BRAC2"
names(d2)[names(d2) == "framecolor_R"] <- "context_R"
names(d1)[names(d1) == "cuecolor_R"] <- "context_R"
# d <- read.csv(paste0(dataDir, "B2_Pro1", ".csv"), sep = ";", dec = ",")
# demo <- read.csv(paste0(tabDir, "logbook_BRAC2_Pro1", ".csv"), sep = ";", dec = ",")
# d$prolific <- 1
# d1 <- read.csv(paste0(dataDir, "B2_RWTH1", ".csv"), sep = ";", dec = ",")
# demo1 <- read.csv(paste0(tabDir, "logbook_BRAC2_RWTH1", ".csv"), sep = ";", dec = ",")
# d1$prolific <- 0
#
d <- rbind(d1, d2)
# #demo <- demo[, names(demo1)]
# demo <- rbind(demo, demo1)
#
#
# for (j in unique(d$pp)){
#   d[d$pp == j, "age"] <- demo[demo$pp == j, "age"]
#   d[d$pp == j, "sex"]  <- demo[demo$pp == j, "sex"]
#   d[d$pp == j, "psyKnowledge"]  <- demo[demo$pp == j, "psyKnowledge"]
#   d[d$pp == j, "education"] <- demo[demo$pp == j, "education"]
#   d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "handedness"]
#   # d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "response.2"]
#   d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "motherTongue"]
#   #d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "response.3"]
#   d[d$pp == j, "country"] <- demo[demo$pp == j, "country"]
# }
#
#
# detect if it's brac01 or brac02 from the colour of frame and cue
if (length(unique(d$framecolor)) == 3){
B = "B1B2"
} else if (unique(d$framecolor)[1] == "black"){
B = "B1"
context = "cuecolor"
context_R = "cuecolor_R"
} else if (unique(d$cuecolor)[1] == "black"){
B = "B2"
context = "framecolor"
context_R = "framecolor_R"
}
print(B)
#
# for (p in c("GM4", "LU1", "LY8", "NE3", "NW8", "TO3", "UG7", "WI5", "XL2", "YF1", "5896f9951a06b50001a7ff12", "5b1fc3ae325d600001c03dcb", "5d5bcd6c0802ee001608c5a8", "5e4a932344498f4e361fee0d", "5ec3dd4a21dd590667039a02")){
#   d[d$pp == p, "counterbalance"] <- "horiAA_1st300"
# }
#
# d <- d[,-1]
d <- d2
# adjust class of variables
d$task_R <- as.factor(d$task_R)
d$ANSWER_R <- as.factor(d$ANSWER_R)
d[[context_R]] <- as.factor(d[[context_R]])
d$context_R <- as.factor(d$context_R)
d$Attempt <- as.factor(d$Attempt)
d$cocoa <- as.factor(d$cocoa)
d$counterbalance <- as.factor(d$counterbalance)
d$age <- as.numeric(d$age)
d$sex <- as.factor(d$sex)
d$psyKnowledge <- as.factor(d$psyKnowledge)
d$education <- as.factor(d$education)
d$handedness <- as.factor(d$handedness)
d$motherTongue <- as.factor(d$motherTongue)
d$country <- as.factor(d$country)
d$prolific <- as.factor(d$prolific)
d$map_horiAA300 <- as.factor(d$map_horiAA300)
#write.csv2(d, paste0(dataDir, "B2_43pps.csv"), row.names=FALSE)
table(d$country)
d$country[d$country == "Wales"] <- "United Kingdom"
d$country[d$country == "England"] <- "United Kingdom"
d$country[d$country == "English"] <- "United Kingdom"
d$country[d$country == "Northern Ireland"] <- "United Kingdom"
d$country[d$country == "germany"] <- "Germany"
d$country[d$country == "italy"] <- "Italy"
d$country[d$country == "Netherlands"] <- "The Netherlands"
d$country[d$country == "poland"] <- "Poland"
d$country[d$country == "Portual"] <- "Portugal"
d$country[d$country == "España"] <- "Spain"
d$country[d$country == "United States"] <- "USA"
table(d$motherTongue)
d$motherTongue[d$motherTongue == "english"] <- "English"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "italian"] <- "Italian"
d$motherTongue[d$motherTongue == "Hungary"] <- "Hungarian"
d$motherTongue[d$motherTongue == "polish"] <- "Polish"
d$motherTongue[d$motherTongue == "portuguese"] <- "Portuguese"
d$motherTongue[d$motherTongue == "Portuguese (PT)"] <- "Portuguese"
# estimate model
modAge <- lm(age ~ prolific + sex + psyKnowledge + education + country, data = d)
summary(modAge)
# predict values
dtot$predictedAge <- predict.lm(modAge, d)
# predict values
d$predictedAge <- predict.lm(modAge, d)
d1 <- read.csv(paste0(dataDir, "B1_43pps", ".csv"), sep = ";", dec = ",")
d1$exp <- "BRAC1"
d1$map_horiAA300 <- 0
d1$map_horiAA300[d1$counterbalance == "horiAA_1st300"] <- 1
d2 <- read.csv(paste0(dataDir, "B2_43pps", ".csv"), sep = ";", dec = ",")
d2$map_horiAA300 <- 0
d2$map_horiAA300[d2$counterbalance == "BRAC2_horiAA_1st300"] <- 1
d2$exp <- "BRAC2"
names(d2)[names(d2) == "framecolor_R"] <- "context_R"
names(d1)[names(d1) == "cuecolor_R"] <- "context_R"
# d <- read.csv(paste0(dataDir, "B2_Pro1", ".csv"), sep = ";", dec = ",")
# demo <- read.csv(paste0(tabDir, "logbook_BRAC2_Pro1", ".csv"), sep = ";", dec = ",")
# d$prolific <- 1
# d1 <- read.csv(paste0(dataDir, "B2_RWTH1", ".csv"), sep = ";", dec = ",")
# demo1 <- read.csv(paste0(tabDir, "logbook_BRAC2_RWTH1", ".csv"), sep = ";", dec = ",")
# d1$prolific <- 0
#
d <- rbind(d1, d2)
# #demo <- demo[, names(demo1)]
# demo <- rbind(demo, demo1)
#
#
# for (j in unique(d$pp)){
#   d[d$pp == j, "age"] <- demo[demo$pp == j, "age"]
#   d[d$pp == j, "sex"]  <- demo[demo$pp == j, "sex"]
#   d[d$pp == j, "psyKnowledge"]  <- demo[demo$pp == j, "psyKnowledge"]
#   d[d$pp == j, "education"] <- demo[demo$pp == j, "education"]
#   d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "handedness"]
#   # d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "response.2"]
#   d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "motherTongue"]
#   #d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "response.3"]
#   d[d$pp == j, "country"] <- demo[demo$pp == j, "country"]
# }
#
#
# detect if it's brac01 or brac02 from the colour of frame and cue
if (length(unique(d$framecolor)) == 3){
B = "B1B2"
} else if (unique(d$framecolor)[1] == "black"){
B = "B1"
context = "cuecolor"
context_R = "cuecolor_R"
} else if (unique(d$cuecolor)[1] == "black"){
B = "B2"
context = "framecolor"
context_R = "framecolor_R"
}
print(B)
#
# for (p in c("GM4", "LU1", "LY8", "NE3", "NW8", "TO3", "UG7", "WI5", "XL2", "YF1", "5896f9951a06b50001a7ff12", "5b1fc3ae325d600001c03dcb", "5d5bcd6c0802ee001608c5a8", "5e4a932344498f4e361fee0d", "5ec3dd4a21dd590667039a02")){
#   d[d$pp == p, "counterbalance"] <- "horiAA_1st300"
# }
#
# d <- d[,-1]
#d <- d2
# adjust class of variables
d$task_R <- as.factor(d$task_R)
d$ANSWER_R <- as.factor(d$ANSWER_R)
d[[context_R]] <- as.factor(d[[context_R]])
d$context_R <- as.factor(d$context_R)
d$Attempt <- as.factor(d$Attempt)
d$cocoa <- as.factor(d$cocoa)
d$counterbalance <- as.factor(d$counterbalance)
d$age <- as.numeric(d$age)
d$sex <- as.factor(d$sex)
d$psyKnowledge <- as.factor(d$psyKnowledge)
d$education <- as.factor(d$education)
d$handedness <- as.factor(d$handedness)
d$motherTongue <- as.factor(d$motherTongue)
d$country <- as.factor(d$country)
d$prolific <- as.factor(d$prolific)
d$map_horiAA300 <- as.factor(d$map_horiAA300)
#write.csv2(d, paste0(dataDir, "B2_43pps.csv"), row.names=FALSE)
table(d$country)
d$country[d$country == "Wales"] <- "United Kingdom"
d$country[d$country == "England"] <- "United Kingdom"
d$country[d$country == "English"] <- "United Kingdom"
d$country[d$country == "Northern Ireland"] <- "United Kingdom"
d$country[d$country == "germany"] <- "Germany"
d$country[d$country == "italy"] <- "Italy"
d$country[d$country == "Netherlands"] <- "The Netherlands"
d$country[d$country == "poland"] <- "Poland"
d$country[d$country == "Portual"] <- "Portugal"
d$country[d$country == "España"] <- "Spain"
d$country[d$country == "United States"] <- "USA"
table(d$motherTongue)
d$motherTongue[d$motherTongue == "english"] <- "English"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "italian"] <- "Italian"
d$motherTongue[d$motherTongue == "Hungary"] <- "Hungarian"
d$motherTongue[d$motherTongue == "polish"] <- "Polish"
d$motherTongue[d$motherTongue == "portuguese"] <- "Portuguese"
d$motherTongue[d$motherTongue == "Portuguese (PT)"] <- "Portuguese"
# estimate age using other demographics - use this to replace missing ages
# estimate model
modAge <- lm(age ~ prolific + sex + psyKnowledge + education + country, data = d)
summary(modAge)
# predict values
d$predictedAge <- predict.lm(modAge, d)
# substitute na with the predicted - leave the other unchanged
noAgepps <- unique(d[is.na(d$age), "pp"])
for (j in noAgepps){
d[d$pp == j, "age"] <- d[d$pp == j, "predictedAge"]
}
#d2$age[is.na(d2$age)] <- dtot[is.na(dtot$age), "predictedAge"]
table(d$exp)
d2 <- d[d$exp == "BRAC2",]
# dataset clening for rts analyses
drt <- d[(d$task_R != 99 & d$rt > 200 & !is.na(d$Attempt == 1)),]
drt <- drt[!(drt$error == 1 | drt$error_R == 1),]
drt$logRT <- log(drt$rt)
# dataset cleaing for error analyses
de <- d[d$task_R != 99 & d$rt > 200,]
d <- d[d$exp == "BRAC2",]
# dataset clening for rts analyses
drt <- d[(d$task_R != 99 & d$rt > 200 & !is.na(d$Attempt == 1)),]
drt <- drt[!(drt$error == 1 | drt$error_R == 1),]
drt$logRT <- log(drt$rt)
# dataset cleaing for error analyses
de <- d[d$task_R != 99 & d$rt > 200,]
B
names(d)
table(d$motherTongue)
table(d$country)
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + motherTongue + prolific + (1|pp), data= drt, REML=F)
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + prolific + (1|pp), data= drt, REML=F)
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + prolific + country + (1|pp), data= drt, REML=F)
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + prolific + (1|pp), data= drt, REML=F)
summary(mod2)
B= "B2"
write.csv2(write_pvalues(mod2, "exp"), file= paste0(tabDir, B, "_mod2", ".csv"))
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + country + (1|pp), data= drt, REML=F)
summary(mod2)
sum(d$prolific)
sum(d$prolific ==1)
12672/16512
mod1 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + (1|pp), data= drt, REML=F)
summary(mod1)
annova(mod2)
anova(mod2)
summary(mod2)
glblRel <- group_my(drt, logRT, pp, task_R, ANSWER_R, framecolor_R, cocoa)
glblRel <- group_my(drt, logRT, pp, task_R, ANSWER_R, context_R, cocoa)
glblRel <- group_my(drt, logRT, pp, task_R, ANSWER_R, context_R, cocoa)
condtnsRel <- group_my(glblRel, meanlogRT, framecolor_R, ANSWER_R, task_R, cocoa)
condtnsRel <- group_my(glblRel, meanlogRT, context_R, ANSWER_R, task_R, cocoa)
# barplot
pd = position_dodge(.7)
ggplot(condtnsRel, aes(x= task_R, y = meanmeanrt, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanrt - se, ymax  = meanmeanrt + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(600,950)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)}
B= "ciao"
ggplot(condtnsRel, aes(x= task_R, y = meanmeanrt, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanrt - se, ymax  = meanmeanrt + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(600,950)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanlogRT - se, ymax  = meanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(600,950)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanmeanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanlogRT - se, ymax  = meanmeanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(600,950)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanmeanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanlogRT - se, ymax  = meanmeanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
#coord_cartesian(ylim=c(600,950)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanmeanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanlogRT - se, ymax  = meanmeanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(6,8)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanmeanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanlogRT - se, ymax  = meanmeanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(6,7)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
ggplot(condtnsRel, aes(x= task_R, y = meanmeanlogRT, fill = ANSWER_R)) +
geom_col(width = 0.7, color = "black", position = pd) +
geom_errorbar(aes(ymin  = meanmeanlogRT - se, ymax  = meanmeanlogRT + se), width = 0.3, size  = 0.7, position = pd,color = "black") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
coord_cartesian(ylim=c(6.25,6.75)) +
ylab("Mean RTs") +
xlab("Task sequence") +
if (B == "B1"){facet_wrap(~cuecolor_R + cocoa)
} else if (B== "B2"){facet_wrap(~framecolor_R + cocoa)
}else{facet_wrap(~context_R + cocoa)}
pacman::p_load("haven", "dplyr", "lme4", "reshape2", "ggplot2", "wesanderson", "afex", "ezANOVA")
dim(d)
d$counterbalance
unique(d$counterbalance)
d1 <- read.csv(paste0(dataDir, "B1_43pps", ".csv"), sep = ";", dec = ",")
d1$exp <- "BRAC1"
d1$map_horiAA300 <- 0
d1$map_horiAA300[d1$counterbalance == "horiAA_1st300"] <- 1
d2 <- read.csv(paste0(dataDir, "B2_43pps", ".csv"), sep = ";", dec = ",")
d2$map_horiAA300 <- 0
d2$map_horiAA300[d2$counterbalance == "BRAC2_horiAA_1st300"] <- 1
d2$exp <- "BRAC2"
names(d2)[names(d2) == "framecolor_R"] <- "context_R"
names(d1)[names(d1) == "cuecolor_R"] <- "context_R"
# d <- read.csv(paste0(dataDir, "B2_Pro1", ".csv"), sep = ";", dec = ",")
# demo <- read.csv(paste0(tabDir, "logbook_BRAC2_Pro1", ".csv"), sep = ";", dec = ",")
# d$prolific <- 1
# d1 <- read.csv(paste0(dataDir, "B2_RWTH1", ".csv"), sep = ";", dec = ",")
# demo1 <- read.csv(paste0(tabDir, "logbook_BRAC2_RWTH1", ".csv"), sep = ";", dec = ",")
# d1$prolific <- 0
#
d <- rbind(d1, d2)
# #demo <- demo[, names(demo1)]
# demo <- rbind(demo, demo1)
#
#
# for (j in unique(d$pp)){
#   d[d$pp == j, "age"] <- demo[demo$pp == j, "age"]
#   d[d$pp == j, "sex"]  <- demo[demo$pp == j, "sex"]
#   d[d$pp == j, "psyKnowledge"]  <- demo[demo$pp == j, "psyKnowledge"]
#   d[d$pp == j, "education"] <- demo[demo$pp == j, "education"]
#   d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "handedness"]
#   # d[d$pp == j, "handedness"]  <- demo[demo$pp == j, "response.2"]
#   d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "motherTongue"]
#   #d[d$pp == j, "motherTongue"]  <- demo[demo$pp == j, "response.3"]
#   d[d$pp == j, "country"] <- demo[demo$pp == j, "country"]
# }
#
#
# detect if it's brac01 or brac02 from the colour of frame and cue
if (length(unique(d$framecolor)) == 3){
B = "B1B2"
} else if (unique(d$framecolor)[1] == "black"){
B = "B1"
context = "cuecolor"
context_R = "cuecolor_R"
} else if (unique(d$cuecolor)[1] == "black"){
B = "B2"
context = "framecolor"
context_R = "framecolor_R"
}
print(B)
#
# for (p in c("GM4", "LU1", "LY8", "NE3", "NW8", "TO3", "UG7", "WI5", "XL2", "YF1", "5896f9951a06b50001a7ff12", "5b1fc3ae325d600001c03dcb", "5d5bcd6c0802ee001608c5a8", "5e4a932344498f4e361fee0d", "5ec3dd4a21dd590667039a02")){
#   d[d$pp == p, "counterbalance"] <- "horiAA_1st300"
# }
#
# d <- d[,-1]
#d <- d2
# adjust class of variables
d$task_R <- as.factor(d$task_R)
d$ANSWER_R <- as.factor(d$ANSWER_R)
d[[context_R]] <- as.factor(d[[context_R]])
d$context_R <- as.factor(d$context_R)
d$Attempt <- as.factor(d$Attempt)
d$cocoa <- as.factor(d$cocoa)
d$counterbalance <- as.factor(d$counterbalance)
d$age <- as.numeric(d$age)
d$sex <- as.factor(d$sex)
d$psyKnowledge <- as.factor(d$psyKnowledge)
d$education <- as.factor(d$education)
d$handedness <- as.factor(d$handedness)
d$motherTongue <- as.factor(d$motherTongue)
d$country <- as.factor(d$country)
d$prolific <- as.factor(d$prolific)
d$map_horiAA300 <- as.factor(d$map_horiAA300)
#write.csv2(d, paste0(dataDir, "B2_43pps.csv"), row.names=FALSE)
#table(d$country)
d$country[d$country == "Wales"] <- "United Kingdom"
d$country[d$country == "England"] <- "United Kingdom"
d$country[d$country == "English"] <- "United Kingdom"
d$country[d$country == "Northern Ireland"] <- "United Kingdom"
d$country[d$country == "germany"] <- "Germany"
d$country[d$country == "italy"] <- "Italy"
d$country[d$country == "Netherlands"] <- "The Netherlands"
d$country[d$country == "poland"] <- "Poland"
d$country[d$country == "Portual"] <- "Portugal"
d$country[d$country == "España"] <- "Spain"
d$country[d$country == "United States"] <- "USA"
#table(d$motherTongue)
d$motherTongue[d$motherTongue == "english"] <- "English"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "german"] <- "German"
d$motherTongue[d$motherTongue == "italian"] <- "Italian"
d$motherTongue[d$motherTongue == "Hungary"] <- "Hungarian"
d$motherTongue[d$motherTongue == "polish"] <- "Polish"
d$motherTongue[d$motherTongue == "portuguese"] <- "Portuguese"
d$motherTongue[d$motherTongue == "Portuguese (PT)"] <- "Portuguese"
# estimate age using other demographics - use this to replace missing ages
# estimate model
modAge <- lm(age ~ prolific + sex + psyKnowledge + education + country, data = d)
summary(modAge)
# predict values
d$predictedAge <- predict.lm(modAge, d)
# substitute na with the predicted - leave the other unchanged
noAgepps <- unique(d[is.na(d$age), "pp"])
for (j in noAgepps){
d[d$pp == j, "age"] <- d[d$pp == j, "predictedAge"]
}
#d2$age[is.na(d2$age)] <- dtot[is.na(dtot$age), "predictedAge"]
d <- d[d$exp == "BRAC1",]
mod1 <- lmer(logRT ~ task_R*ANSWER_R*cuecolor_R*cocoa + (1|pp), data= drt, REML=F)
# mod2 <- lmer(logRT ~ task_R*ANSWER_R*framecolor_R*cocoa + blockNum + age + sex + counterbalance +
#                handedness + (1|pp), data= drt, REML=F)
# either country or prolific, not both
mod2 <- lmer(logRT ~ task_R*ANSWER_R*context_R*cocoa + blockNum + age + sex + map_horiAA300 +
handedness + prolific + (1|pp), data= drt, REML=F)
summary(mod2)
B= "B1"
write.csv2(write_pvalues(mod2, "exp"), file= paste0(tabDir, B, "_mod2", ".csv"))
