begin <- as.POSIXct(as.character(d[d$pp == j & d$eventIndex == 1, "localDate"]),format="%d/%m/%Y %H:%M:%S")
endRow <- which(d$pp == j & d$breakMessage == "## You have completed block 4 out of 4.")
end <- as.POSIXct(as.character(d[endRow, "localDate"]), format="%d/%m/%Y %H:%M:%S")
duration <- difftime(end, begin, units = "mins")
durations[which(unique(d$pp) == j)] <- duration
if (duration > 35 | duration < 14) {cat("pp ", j, " took", duration, "minutes to complete the experiment.\n")}
# did she have some weird trials durations?
if (sum(d$pp == j & d$zoneType == "fixation" & d$rt > 1410, na.rm = T) > 0) {
cat("pp ", j, " has had",  sum(d$pp == j & d$zoneType == "fixation" & d$rt > 1410, na.rm = T), "weird fixations durations \n\n")}
if (sum(d$pp == j & d$zoneName == "advancementZone" & d$display == "trial" & d$rt > 310, na.rm = T) > 0) {
cat("pp ", j, " has had", sum(d$pp == j & d$zoneName == "advancementZone" & d$display == "trial" & d$rt > 310, na.rm = T), "weird cue durations \n\n")}
# did she have a delay somewhere?
load_delays <- sum(d$pp == j & d$rt == "LOADING DELAY", na.rm = T)
if (load_delays >0) {cat("pp ", j, " has had", load_delays, "loading delays.\n\n")}
# did she left any comments?
#if (!is.na(demo[demo$pp == j & demo$questionKey == "comment", "Response"])){
if (demo[demo$pp == j & demo$questionKey == "comment", "Response"] != ""){
cat("pp ", j, "left a comment:", demo[demo$pp == j & demo$questionKey == "comment", "Response"], "\n\n")}
}
cat( "mean duration of the experiment was", mean(durations, na.rm = T), "minutes")
dclean <- d[(d$zoneName == "Zone1" | d$zoneName == "Zone3" | d$zoneName == "Zone4") & d$display == "trial",]
dclean <- dclean[, c("pp", "counterbalance", "blockNum", "trialNum", "rt", "Response", "Attempt", "error", "Timed.Out", "ANSWER", "cuecolor", "framecolor", "task", "stimulus", "cocoa")]
# keep zone 1 (no resp) and zone 3 and 4 (left an right resp) events of the trial part (no training)
dclean <- d[(d$zoneName == "Zone1" | d$zoneName == "Zone3" | d$zoneName == "Zone4") & d$display == "trial", c("pp", "counterbalance", "blockNum", "trialNum", "rt", "Response", "Attempt", "error", "Timed.Out", "ANSWER", "cuecolor", "framecolor", "task", "stimulus", "cocoa")]
View(logbook_df)
View(logbook_df)
durations <- rep(0, length(unique(d$pp)))
#d$logbook <- 0
logbook_df <- data.frame("pp" = unique(d$pp))
logbook_df$remove <- 0
logbook_df$mapping <- ""
logbook_df$message <- ""
# loop over pps to check if some events happened
for (j in unique(d$pp)){
#check & save mapping
#print(d[d$pp == j & d$display == "Instructions", c("mappingsGuide", "greatMap", "oddMap", "magnMap")][1,])
logbook_df[logbook_df == j, "mapping"] <- unique(d[d$pp == j, "counterbalance"])
# did she skip training?
if (is.na(sum(d$pp == j & d$Response == "Start the training!", na.rm = T))){
cat("no training for pp", j, "\n")}
# did she re-read instr?
if (sum(d$pp == j & d$Response == "Re-read instructions", na.rm = T) != 0) {cat("pp ", j, "has read instructions more than once. \n")}
# did she get to the end?
if (unique(d$finalCheckpoint) != "demographics done" & unique(d$finalCheckpoint) != "after demographic"){
cat("pp ", j, " has not gotten to the end.\n" )}
# did she have big enouhg screen?
screenSize <- unique(d[d$pp == j, "ppViewportSize"])
#w = strsplit(as.character(screenSize), 'x')[1]
h = strsplit(as.character(screenSize), 'x')[[1]][2]
if (as.integer(h) < 578) {
cat("pp ", j, "screen height was", h,"while the min necessary is 578.\n" )
logbook_df[logbook_df == j, "message"] <- paste0("screen height was ", h," while the min necessary is 578")
}
# how long did it take?
begin <- as.POSIXct(as.character(d[d$pp == j & d$eventIndex == 1, "localDate"]),format="%d/%m/%Y %H:%M:%S")
endRow <- which(d$pp == j & d$breakMessage == "## You have completed block 4 out of 4.")
end <- as.POSIXct(as.character(d[endRow, "localDate"]), format="%d/%m/%Y %H:%M:%S")
duration <- difftime(end, begin, units = "mins")
durations[which(unique(d$pp) == j)] <- duration
if (duration > 35 | duration < 14) {cat("pp ", j, " took", duration, "minutes to complete the experiment.\n")}
# did she have some weird trials durations?
if (sum(d$pp == j & d$zoneType == "fixation" & d$rt > 1410, na.rm = T) > 0) {
cat("pp ", j, " has had",  sum(d$pp == j & d$zoneType == "fixation" & d$rt > 1410, na.rm = T), "weird fixations durations \n\n")}
if (sum(d$pp == j & d$zoneName == "advancementZone" & d$display == "trial" & d$rt > 310, na.rm = T) > 0) {
cat("pp ", j, " has had", sum(d$pp == j & d$zoneName == "advancementZone" & d$display == "trial" & d$rt > 310, na.rm = T), "weird cue durations \n\n")}
# did she have a delay somewhere?
load_delays <- sum(d$pp == j & d$rt == "LOADING DELAY", na.rm = T)
if (load_delays >0) {cat("pp ", j, " has had", load_delays, "loading delays.\n\n")}
# did she left any comments?
#if (!is.na(demo[demo$pp == j & demo$questionKey == "comment", "Response"])){
if (demo[demo$pp == j & demo$questionKey == "comment", "Response"] != ""){
cat("pp ", j, "left a comment:", demo[demo$pp == j & demo$questionKey == "comment", "Response"], "\n\n")}
}
cat( "mean duration of the experiment was", mean(durations, na.rm = T), "minutes")
View(logbook_df)
# tests
print(sum(is.na(dclean$pp)))
# remove empty rows (where pp ID is na). This only happens in xlsx files
dclean <- dclean[!is.na(dclean$pp),]
# different colour column if BRAC1 or BRAC2
if (unique(dclean$framecolor)[1] == "black"){
dclean <- sequence_relation(dclean, c("task", "ANSWER", "cuecolor"))
} else if (unique(dclean$cuecolor)[1] == "black"){
dclean <- sequence_relation(dclean, c("task", "ANSWER", "framecolor"))
}
dclean <- sequence_relation(dclean, "error", type = "error")
# seek for fast responses, errors and not answered trials
for (j in unique(dclean$pp)){
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
logbook_df[logbook_df$pp == j, "message2"] <- paste0("did", sum(dclean$pp == j & dclean$rt < 200), "super fast responses")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
logbook_df[logbook_df$pp == j, "message2"] <- paste0("did", sum(dclean$pp == j & dclean$rt > 2000), "very slow responses")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
logbook_df[logbook_df$pp == j, "message2"] <- paste0("did", sum(dclean$pp == j & dclean$error), "errors")}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
logbook_df[logbook_df$pp == j, "message2"] <- paste0("did", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials")
}
}
View(logbook_df)
# seek for fast responses, errors and not answered trials
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste(fast_mess, fast_mess, fast_mess, fast_mess)
}
View(logbook_df)
# seek for fast responses, errors and not answered trials
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste(fast_mess, slow_mess, error_mess, miss_mess)
}
View(logbook_df)
View(logbook_df)
View(logbook_df)
unique(d$pp)
View(d)
unique(d$localDate)
for (j in unique(d$pp)){print(unique(d$pp == j & d$eventIndex == 1, "localDate"))}
for (j in unique(d$pp)){print(d[d$pp == j & d$eventIndex == 1, "localDate"])}
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses;")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses;")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors;")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials;")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste(fast_mess, slow_mess, error_mess, miss_mess)
}
View(logbook_df)
76/384
paste(fast_mess, slow_mess, error_mess, miss_mess)
# seek for fast responses, errors and not answered trials
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (logbook_df[j, "message2"] != ""){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")}
}
logbook_df[j, "message2"]
View(logbook_df)
logbook_df <- logbook_df[, -5]
# seek for fast responses, errors and not answered trials
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (logbook_df[j, "message2"] != ""){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")}
}
View(logbook_df)
# seek for fast responses, errors and not answered trials
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (!is.na(logbook_df[j, "message2"])){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")}
}
!is.na(logbook_df[j, "message2"])
logbook_df[j, "message2"]
readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")}
readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")
readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")}
# seek for fast responses, errors and not answered trials
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (!is.na(logbook_df[j, "message2"])){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")
menu(c("Yes", "No"), title="Do you want this?")}
}
remove_him <- function (){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")
return(remove_yn)
}
# seek for fast responses, errors and not answered trials
remove_him <- function (){
remove_yn <- readline(prompt = "Do you want to reject this participant? Type 1 for yes, 0 for no")
return(remove_yn)
}
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (!is.na(logbook_df[j, "message2"])){
remove_yn <- remove_him()}
}
!is.na(logbook_df[j, "message2"]
)
View(logbook_df)
!is.na(logbook_df["5e187a5c5b1c5914a9cf41f3", "message2"])
logbook_df["5e187a5c5b1c5914a9cf41f3", "message2"]
View(logbook_df)
logbook_df["5e44728e77958e2f1b9c3e2b", "message2"]
logbook_df
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (!is.na(logbook_df[logbook_df$pp == j, "message2"])){
remove_yn <- remove_him()}
}
View(logbook_df)
remove_him <- function(j){
remove_yn <- readline(
prompt = paste("Do you want to reject participant", j, "? Type 1 for yes, 0 for no and press enter")
)
return(remove_yn)
}
# seek for fast responses, errors and not answered trials
remove_him <- function(j){
remove_yn <- readline(
prompt = paste("Do you want to reject participant", j, "? Type 1 for yes, 0 for no and press enter")
)
return(remove_yn)
}
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (!is.na(logbook_df[logbook_df$pp == j, "message2"])){
logbook_df[logbook_df$pp == j, "remove"] <- remove_him(j)
}
}
logbook_df[logbook_df$pp == j, "message2"]
# seek for fast responses, errors and not answered trials
remove_him <- function(j){
remove_yn <- readline(
prompt = paste("Do you want to reject participant", j, "? Type 1 for yes, 0 for no and press enter")
)
return(remove_yn)
}
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (logbook_df[logbook_df$pp == j, "message2"] != ""){
logbook_df[logbook_df$pp == j, "remove"] <- remove_him(j)
}
}
for (j in unique(dclean$pp)){
# prepare empty strings to fill logbook
fast_mess = ""
slow_mess = ""
error_mess = ""
miss_mess = ""
remove_yn = 0
# check different perofrmance markers
if (sum(dclean$pp == j & dclean$rt < 200) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt < 200), "super fast resp \n")
fast_mess = paste0("did ", sum(dclean$pp == j & dclean$rt < 200), " super fast responses; ")
}
if (sum(dclean$pp == j & dclean$rt > 2000) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$rt > 2000), "very slow resp \n")
slow_mess = paste0("did ", sum(dclean$pp == j & dclean$rt > 2000), " very slow responses; ")
}
if (sum(dclean$pp == j & dclean$error) > 38){
cat("pp ", j, " did", sum(dclean$pp == j & dclean$error), "errors \n")
error_mess = paste0("did ", sum(dclean$pp == j & dclean$error), " errors; ")
}
if (sum(dclean$pp == j & dclean$Attempt == 1, na.rm = T) < 346){
cat("pp ", j, " did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials \n")
miss_mess = paste0("did not answer to", sum(is.na(dclean$pp == j & dclean$Attempt == 0)), "trials; ")
}
logbook_df[logbook_df$pp == j, "message2"] <- paste0(fast_mess, slow_mess, error_mess, miss_mess)
if (logbook_df[logbook_df$pp == j, "message2"] != ""){
logbook_df[logbook_df$pp == j, "remove"] <- remove_him(j)
}
}
View(logbook_df)
